{"version":3,"sources":["App.jsx","index.js"],"names":["App","state","Column","editingColumnName","AddTask","ColumnName","todos","title","newtitle","AddnewColumnPopup","newColumntitle","this","setState","index","obj","push","alert","splice","length","className","map","val","key","value","onChange","e","target","type","onClick","deleteColumn","editColumnName","v","i","Button","handleTaskModal","Modal","show","onHide","Header","closeButton","Body","width","placeholder","Footer","addTask","handleModal","addColumn","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eedcbf6e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {Button, Modal} from 'react-bootstrap';\nimport { FaEdit } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\nimport {BsThreeDotsVertical} from 'react-icons/bs';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = { \n           \n      Column:[    \n            {\n        editingColumnName : false,\n        AddTask: false,\n        ColumnName : \"First\",\n        todos: [{title: \"Task1\"},{title: \"Task2\"}],\n        newtitle: \"\",\n        \n        }\n      ],\n      AddnewColumnPopup: false,\n      newColumntitle : \"\"\n    }\n  }\n  handleModal(){\n    this.state.AddnewColumnPopup= !this.state.AddnewColumnPopup\n    this.setState({})\n  }\n  handleTaskModal(index){\n    this.state.Column[index].AddTask= !this.state.Column[index].AddTask\n    this.setState({})\n  }\n  addColumn(){\n    \n    let obj = {\n        editingColumnName : false,\n        AddTask: false,\n        ColumnName : this.state.newColumntitle,\n        todos: [],\n        newtitle: \"\",\n        \n    }\n   \n    this.state.Column.push(obj);\n    this.state.AddnewColumnPopup = false;\n    this.state.newColumntitle = \"\";\n    this.setState({})\n\n  }\n  editColumnName(index){\n    \n    this.state.Column[index].editingColumnName = !(this.state.Column[index].editingColumnName);\n    \n    this.setState({\n      \n        \n    })\n  }\n  addTask(index){\n    \n    if(this.state.Column[index].newtitle!= \"\"){\n      \n    let obj = {title : this.state.Column[index].newtitle/*, description : this.state.Column[index].newdescription*/}\n    this.state.Column[index].todos.push(obj);\n    this.state.Column[index].AddTask= !this.state.Column[index].AddTask;\n    this.state.Column[index].newtitle= \"\";\n    this.setState({})\n    }\n    else{\n      alert(\"Task title cannot be empty\");\n    }\n    \n  }\n  deleteColumn(index){\n    this.state.Column.splice(index,1)\n    this.setState({Column: this.state.Column})\n  }\n \n  render(){\n  return (\n    <div>\n      <h1>TodoApp</h1>\n      {\n        \n    (this.state.Column.length!=0)?\n    <div className = \"main\">\n      \n      <ul className = \"list-unstyled list-inline\">\n          { \n            \n            \n        (this.state.Column).map((val,index)=>{\n          return <li className = \"list-inline-item\" key = {index}>\n            \n\n      \n\n    <div className='todo-app'>\n      <div className = \"column shadow-lg p-3 mb-5 bg-white rounded\">\n        <div>\n          {!(this.state.Column[index].editingColumnName)?<h5>{this.state.Column[index].ColumnName}</h5>:<input value = {this.state.Column[index].ColumnName}  onChange = {(e) => {\n            this.state.Column[index].ColumnName = e.target.value;\n            this.state.newColumntitle = \"\";\n            this.setState({});}} type = \"text\" ></input>}\n          <MdDelete onClick = {()=>this.deleteColumn(index)}  className = \"icon deleteIcon\"></MdDelete>\n          <FaEdit onClick = {()=>this.editColumnName(index)} className = \"icon editIcon\"></FaEdit>\n        </div><br></br>\n\n      \n      <div>\n        <ul>\n          { \n            \n        (this.state.Column[index].todos).map((v,i)=>{\n          return <li className = \"todolistitems\" key = {i}>\n            <BsThreeDotsVertical></BsThreeDotsVertical>\n            \n            <h6 className = \"heading6\">{v.title}</h6>\n            \n          </li>\n        })\n      }\n      </ul>\n\n</div>\n       \n      <div className = \"AddBtnDiv\">\n       <Button onClick = {()=>this.handleTaskModal(index)} className = \" btn-success\">+ Task</Button>\n      </div>\n</div>\n\n      \n\n\n\n\n\n        <Modal show = {this.state.Column[index].AddTask} onHide = {()=>this.handleTaskModal(index)}>\n          <Modal.Header closeButton >Add New Task </Modal.Header>\n          <Modal.Body>\n            <input value = {this.state.Column[index].newtitle} onChange = {(e) => {\n              this.state.Column[index].newtitle = e.target.value;this.setState({})}\n            }  width = \"80\" placeholder = \"Title \" type=\"text\"/>\n            \n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick = {()=>this.handleTaskModal(index)} className = \"btn-danger\">Cancel</Button>\n            <Button onClick = {()=>this.addTask(index)} className = \"btn-success Add\">Add Task</Button>\n          </Modal.Footer>\n        </Modal>\n    </div>\n\n\n    </li>\n        })\n      }\n    </ul>\n  \n  </div>:\n  <div>\n  \n  </div>}\n  <Button className = \"newcolbtn\" onClick = {()=>this.handleModal()}>Add New List</Button> \n        <Modal show = {this.state.AddnewColumnPopup} onHide = {()=>this.handleModal()}>\n          <Modal.Header closeButton >Add New Column</Modal.Header>\n          <Modal.Body>\n            <input value = {this.state.newColumntitle} onChange = {(e) => {\n              this.state.newColumntitle = e.target.value;\n              this.setState({})}} width = \"80\" placeholder = \"Title of the column\" type=\"text\"/>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick = {()=>this.handleModal()} className = \"btn-danger\">Cancel</Button>\n            <Button onClick = {()=>this.addColumn()} className = \"btn-success\">Add New Column</Button>\n          </Modal.Footer>\n        </Modal>\n\n  </div>\n  );\n}\n\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n   \n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}